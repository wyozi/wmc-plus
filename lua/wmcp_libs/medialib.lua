do
local a="git@d7c85b4f"local b=true;if medialib and medialib.VERSION~=a then local c=a=="local"print("[MediaLib] Warning: "..(c and"overwriting"or"found").." existing medialib. (local: "..a..", defined: "..(medialib.VERSION or"-")..")")if not c then return end end;medialib={}medialib.VERSION=a;medialib.DISTRIBUTABLE=b;medialib.Modules={}medialib.DEBUG=false;function medialib.modulePlaceholder(d)medialib.Modules[d]={}end;function medialib.module(d,e)if medialib.DEBUG then print("[MediaLib] Creating module "..d)end;local f=medialib.Modules[d]or{name=d,options=e}medialib.Modules[d]=f;return f end;if SERVER then for g,h in pairs(file.Find("medialib/*","LUA"))do AddCSLuaFile("medialib/"..h)end end;function medialib.load(d)local f=medialib.Modules[d]if f then return f end;if medialib.DEBUG then print("[MediaLib] Loading unreferenced module "..d)end;local file="medialib/"..d..".lua"include(file)return medialib.Modules[d]end;local i={read=function(self)return file.Read(self.lua_path,"LUA")end,load=function(self)include(self.lua_path)end,addcs=function(self)AddCSLuaFile(self.lua_path)end}i.__index=i;local j={read=function(self)return self.source end,load=function(self)RunString(self.source)end,addcs=function()end}j.__index=j;medialib.FolderItems={}function medialib.folderIterator(k)local l={}for g,h in pairs(file.Find("medialib/"..k.."/*.lua","LUA"))do table.insert(l,setmetatable({name=h,lua_path="medialib/"..k.."/"..h},i))end;for m,n in pairs(medialib.FolderItems)do local o=m:match("^([^/]*).+")if o==k then table.insert(l,setmetatable({name=m:match("^[^/]*/(.+)"),source=n},j))end end;return pairs(l)end;if CLIENT then local function p()for q=1,30 do MsgC(HSVToColor(30*q,0.5,0.9)," "..string.rep("SEE BELOW FOR INSTRUCTIONS  ",3).."\n")end end;concommand.Add("medialib_noflash",function(g,g,r)if r[1]=="rainbow"then p()end;SetClipboardText("http://get.adobe.com/flashplayer/otherversions/")MsgN("[ MediaLib: How to get Flash Player ]")MsgN("1. Open this website in your browser (not the ingame Steam browser): http://get.adobe.com/flashplayer/otherversions/")MsgN("   (the link has been automatically copied to your clipboard)")MsgN("2. Download and install the NSAPI (for Firefox) version")MsgN("3. Restart your Garry's Mod and rejoin this server")MsgN("[ ======================= ]")end)concommand.Add("medialib_lowaudio",function(g,g,r)if r[1]=="rainbow"then p()end;SetClipboardText("http://windows.microsoft.com/en-us/windows7/adjust-the-sound-level-on-your-computer")MsgN("[ MediaLib: How to fix muted sound ]")MsgN("1. Follow instructions here: http://windows.microsoft.com/en-us/windows7/adjust-the-sound-level-on-your-computer")MsgN("   (the link has been automatically copied to your clipboard, you can open it in the steam ingame browser)")MsgN("2. Increase the volume of a process called 'Awesomium Core'")MsgN("3. You should immediately start hearing sound if a mediaclip is playing")MsgN("[ ======================= ]")end)hook.Add("OnPlayerChat","MediaLib.ShowInstructions",function(s,t)if t:match("!ml_noflash")then RunConsoleCommand("medialib_noflash","rainbow")RunConsoleCommand("showconsole")elseif t:match("!ml_lowvolume")then RunConsoleCommand("medialib_lowaudio","rainbow")RunConsoleCommand("showconsole")end end)end
end

-- 'oop'; CodeLen/MinifiedLen 2927/1560; Dependencies []
medialib.modulePlaceholder("oop")
do
local a=medialib.module("oop")a.Classes=a.Classes or{}function a.class(b,c)local d=a.Classes[b]if not d then d=a.createClass(b,c)a.Classes[b]=d;if medialib.DEBUG then print("[MediaLib] Registering oopclass "..b)end end;return d end;function a.resolveClass(e)if e==nil then return a.Object end;local f=type(e)if f=="string"then local g=a.Classes[e]if g then return g end;error("Resolving class from inexistent class string '"..tostring(e).."'")end;if f=="table"then return e end;error("Resolving class from invalid object '"..tostring(e).."'")end;local h={}local i={'__add','__call','__concat','__div','__ipairs','__le','__len','__lt','__mod','__mul','__pairs','__pow','__sub','__tostring','__unm'}function a.createClass(b,c)local d={}local j;if c~=h then j=a.resolveClass(c)end;d.name=b;d.super=j;d.members=setmetatable({},{__index=d.super})d.members.class=d;d.members.super=d.super;local k={}do k.__index=d.members;for l,b in pairs(i)do k[b]=function(...)local m=d.members[b]if m then return m(...)end end end end;local n={}do n.__index=d.members;n.__newindex=d.members;n.__tostring=function(self)return"class "..self.name end;function n:__call(...)local o={}setmetatable(o,k)local p=o.initialize;if p then p(o,...)end;return o end end;setmetatable(d,n)return d end;a.Object=a.createClass("Object",h)function a.Object:hashCode()local q=getmetatable(self)local r=q.__tostring;q.__tostring=nil;local s=tostring(self):match("table: 0x(.*)")q.__tostring=r;return s end;function a.Object:__tostring()return string.format("%s@%s",self.class.name,self:hashCode())end
end
-- 'mediabase'; CodeLen/MinifiedLen 3470/1497; Dependencies [oop]
medialib.modulePlaceholder("mediabase")
do
local a=medialib.load("oop")local b=a.class("Media")function b:on(c,d)self._events=self._events or{}self._events[c]=self._events[c]or{}self._events[c][d]=true end;function b:emit(c,...)if not self._events then return end;local e=self._events[c]if not e then return end;for f,g in pairs(e)do f(...)end end;function b:getServiceBase()error("Media:getServiceBase() not implemented!")end;function b:getService()return self._service end;function b:getUrl()return self._unresolvedUrl end;function b:lookupMetadata()local h=self._metadata;if type(h)=="table"then return h end;if h==true or type(h)=="string"then return nil end;self._metadata=true;self:getService():query(self:getUrl(),function(i,j)if i then self._metadata=i else self._metadata=j end end)return nil end;function b:isValid()return false end;function b:IsValid()return self:isValid()end;function b:setVolume(k)end;function b:getVolume()end;function b:setQuality(l)end;function b:seek(m)end;function b:getTime()return 0 end;function b:sync(m,n)if self._lastSync and self._lastSync>CurTime()-5 then return end;local o=self:shouldSync(m,n)if not o then return end;self:seek(m+0.1)self._lastSync=CurTime()end;function b:shouldSync(m,n)if not self:isValid()or not self:isPlaying()then return false end;n=n or 2;local p=self:getTime()local q=math.abs(p-m)return q>n end;function b:getState()end;function b:isPlaying()return self:getState()=="playing"end;function b:play()end;function b:pause()end;function b:stop()end;function b:draw(r,s,t,u)end
end
-- 'servicebase'; CodeLen/MinifiedLen 526/377; Dependencies [oop]
medialib.modulePlaceholder("servicebase")
do
local a=medialib.load("oop")local b=a.class("Service")function b:on(c,d)self._events={}self._events[c]=self._events[c]or{}self._events[c][d]=true end;function b:emit(c,...)for e,f in pairs(self._events[c]or{})do e(...)end;if c=="error"then MsgN("[MediaLib] Video error: "..table.ToString{...})end end;function b:load(g,h)end;function b:isValidUrl(g)end;function b:query(g,d)end
end
-- 'timekeeper'; CodeLen/MinifiedLen 1016/695; Dependencies [oop]
medialib.modulePlaceholder("timekeeper")
do
local a=medialib.load("oop")local b=a.class("TimeKeeper")function b:initialize()self:reset()end;function b:reset()self.cachedTime=0;self.running=false;self.runningTimeStart=0 end;function b:getTime()local c=self.cachedTime;if self.running then c=c+RealTime()-self.runningTimeStart end;return c end;function b:isRunning()return self.running end;function b:play()if self.running then return end;self.runningTimeStart=RealTime()self.running=true end;function b:pause()if not self.running then return end;local d=RealTime()-self.runningTimeStart;self.cachedTime=self.cachedTime+d;self.running=false end;function b:seek(c)self.cachedTime=c;if self.running then self.runningTimeStart=RealTime()end end
end
-- 'service_html'; CodeLen/MinifiedLen 6026/4023; Dependencies [oop,timekeeper,volume3d]
medialib.modulePlaceholder("service_html")
do
local a=medialib.load("oop")medialib.load("timekeeper")local b=medialib.load("volume3d")local c=a.class("HTMLService","Service")function c:load(d,e)local f=a.class("HTMLMedia")()f._unresolvedUrl=d;f._service=self;self:resolveUrl(d,function(g,h)f:openUrl(g)if e and e.use3D then b.startThink(f,{pos=e.pos3D,ent=e.ent3D,fadeMax=e.fadeMax3D})end;if h and h.start and not e or not e.dontSeek then f:seek(h.start)end end)return f end;function c:resolveUrl(d,i)i(d,self:parseUrl(d))end;function c:hasReliablePlaybackEvents(f)return false end;local j={instances={}}concommand.Add("medialib_awepoolinfo",function()print("AwesomiumPool> Free instance count: "..#j.instances)end)timer.Create("MediaLib.AwesomiumPoolCleaner",30,0,function()if#j.instances<3 then return end;local k=table.remove(j.instances,1)if IsValid(k)then k:Remove()end end)function j.get()local k=table.remove(j.instances,1)if not IsValid(k)then local l=vgui.Create("DHTML")return l end;return k end;function j.free(k)if not IsValid(k)then return end;k:SetHTML("")table.insert(j.instances,k)end;local m=a.class("HTMLMedia","Media")local n,o=1280,720;function m:initialize()self.timeKeeper=a.class("TimeKeeper")()self.panel=j.get()local l=self.panel;l:SetPos(0,0)l:SetSize(n,o)local p="MediaLib.HTMLMedia.FakeThink-"..self:hashCode()hook.Add("Think",p,function()if not IsValid(self.panel)then hook.Remove("Think",p)return end;self.panel:Think()end)local q=l._OldCM or l.ConsoleMessage;l._OldCM=q;l.ConsoleMessage=function(r,s)if string.find(s,"XMLHttpRequest")then return end;if string.find(s,"Unsafe JavaScript attempt to access")then return end;return q(r,s)end;l:SetPaintedManually(true)l:SetVisible(false)l:AddFunction("medialiblua","Event",function(t,u)self:handleHTMLEvent(t,util.JSONToTable(u))end)end;function m:getBaseService()return"html"end;function m:openUrl(d)self.panel:OpenURL(d)self.URLChanged=CurTime()end;function m:runJS(v,...)local w=string.format(v,...)self.panel:QueueJavascript(w)end;function m:handleHTMLEvent(t,x)if t=="stateChange"then local y=x.state;local z;if x.time then self.timeKeeper:seek(x.time)end;if y=="playing"then z="playing"self.timeKeeper:play()elseif y=="ended"or y=="paused"or y=="buffering"then z=y;self.timeKeeper:pause()end;if z then self.state=z;self:emit(z)end elseif t=="error"then self:emit("error",{errorId="service_error",errorName="Error from service: "..tostring(x.message)})else MsgN("[MediaLib] Unhandled HTML event "..tostring(t))end end;function m:getState()return self.state end;function m:updateTexture()if self.lastUpdatedFrame~=FrameNumber()then self.panel:UpdateHTMLTexture()self.lastUpdatedFrame=FrameNumber()end end;function m:draw(A,B,C,D)self:updateTexture()local E=self.panel:GetHTMLMaterial()surface.SetMaterial(E)surface.SetDrawColor(255,255,255)local F,G=n/E:Width(),o/E:Height()surface.DrawTexturedRectUV(A or 0,B or 0,C or n,D or o,0,0,F,G)end;function m:getTime()return self.timeKeeper:getTime()end;function m:setQuality(H)if self.lastSetQuality and self.lastSetQuality==H then return end;self.lastSetQuality=H;self:runJS("medialibDelegate.run('setQuality', {quality: %q})",H)end;function m:applyVolume()local I=self.internalVolume or 1;local J=self.volume or 1;local K=I*J;if self.lastSetVolume and self.lastSetVolume==K then return end;self.lastSetVolume=K;self:runJS("medialibDelegate.run('setVolume', {vol: %f})",K)end;function m:setVolume(K)self.volume=K;self:applyVolume()end;function m:seek(L)self:runJS("medialibDelegate.run('seek', {time: %d})",L)end;function m:hasReliablePlaybackEvents()local M=self:getService()return M and M:hasReliablePlaybackEvents(self)end;function m:play()if not self:hasReliablePlaybackEvents()then self.timeKeeper:play()end;self:runJS("medialibDelegate.run('play')")end;function m:pause()if not self:hasReliablePlaybackEvents()then self.timeKeeper:pause()end;self:runJS("medialibDelegate.run('pause')")end;function m:stop()j.free(self.panel)self.panel=nil;self.timeKeeper:pause()self:emit("destroyed")end;function m:isValid()return IsValid(self.panel)end
end
-- 'service_bass'; CodeLen/MinifiedLen 4092/2902; Dependencies [oop,volume3d]
medialib.modulePlaceholder("service_bass")
do
local a=medialib.load("oop")local b=medialib.load("volume3d")local c=a.class("BASSService","Service")function c:load(d,e)local f=a.class("BASSMedia")()f._unresolvedUrl=d;f._service=self;self:resolveUrl(d,function(g,h)if e and e.use3D then f.is3D=true;f:runCommand(function(i)b.startThink(f,{pos=e.pos3D,ent=e.ent3D,fadeMax=e.fadeMax3D})end)end;f:openUrl(g)if h and h.start and not e or not e.dontSeek then f:seek(h.start)end end)return f end;function c:resolveUrl(d,j)j(d,self:parseUrl(d))end;local k=a.class("BASSMedia","Media")function k:initialize()self.commandQueue={}end;function k:getBaseService()return"bass"end;function k:updateFFT()local l=FrameNumber()if self._lastFFTUpdate and self._lastFFTUpdate==l then return end;self._lastFFTUpdate=l;local i=self.chan;if not IsValid(i)then return end;self.fftValues=self.fftValues or{}i:FFT(self.fftValues,FFT_512)end;function k:getFFT()return self.fftValues end;function k:draw(m,n,o,p)surface.SetDrawColor(0,0,0)surface.DrawRect(m,n,o,p)self:updateFFT()local q=self:getFFT()if not q then return end;local r=#q;local s=r==0 and 1 or o/r;local t=o/r;for u=1,r do surface.SetDrawColor(HSVToColor(u,0.9,0.5))local v=q[u]*p;surface.DrawRect(m+u*t,n+p-v,t,v)end end;function k:openUrl(d)local w="noplay noblock"if self.is3D then w=w.." 3d"end;sound.PlayURL(d,w,function(i,x,y)self:bassCallback(i,x,y)end)end;function k:openFile(z)local w="noplay noblock"if self.is3D then w=w.." 3d"end;sound.PlayFile(z,w,function(i,x,y)self:bassCallback(i,x,y)end)end;function k:bassCallback(i,x,y)if not IsValid(i)then ErrorNoHalt("[MediaLib] BassMedia play failed: ",y)self._stopped=true;self:emit("error","loading_failed",string.format("BASS error id: %s; name: %s",x,y))return end;if self._stopped then i:Stop()return end;self.chan=i;for A,B in pairs(self.commandQueue)do B(i)end;self.commandQueue={}end;function k:runCommand(C)if IsValid(self.chan)then C(self.chan)else self.commandQueue[#self.commandQueue+1]=C end end;function k:setVolume(D)self:runCommand(function(i)i:SetVolume(D)end)end;function k:seek(E)self:runCommand(function(i)if i:IsBlockStreamed()then return end;i:SetTime(E)end)end;function k:getTime()if self:isValid()and IsValid(self.chan)then return self.chan:GetTime()end;return 0 end;function k:getState()if not self:isValid()then return"error"end;if not IsValid(self.chan)then return"loading"end;local F=self.chan:GetState()if F==GMOD_CHANNEL_PLAYING then return"playing"end;if F==GMOD_CHANNEL_PAUSED then return"paused"end;if F==GMOD_CHANNEL_STALLED then return"buffering"end;if F==GMOD_CHANNEL_STOPPED then return"paused"end;return end;function k:play()self:runCommand(function(i)i:Play()self:emit("playing")end)end;function k:pause()self:runCommand(function(i)i:Pause()self:emit("paused")end)end;function k:stop()self._stopped=true;self:runCommand(function(i)i:Stop()self:emit("destroyed")end)end;function k:isValid()return not self._stopped end
end
-- 'media'; CodeLen/MinifiedLen 485/328; Dependencies []
medialib.modulePlaceholder("media")
do
local a=medialib.module("media")a.Services={}function a.registerService(b,c)a.Services[b]=c()end;a.RegisterService=a.registerService;function a.service(b)return a.Services[b]end;a.Service=a.service;function a.guessService(d)for e,f in pairs(a.Services)do if f:isValidUrl(d)then return f end end end;a.GuessService=a.guessService
end
medialib.FolderItems["services/mp4.lua"] = "local a=medialib.load(\"oop\")local b=a.class(\"Mp4Service\",\"HTMLService\")local c={\"^https?://.*%.mp4\"}function b:parseUrl(d)for e,f in pairs(c)do local g=string.match(d,f)if g then return{id=g}end end end;function b:isValidUrl(d)return self:parseUrl(d)~=nil end;local h=\"http://wyozi.github.io/gmod-medialib/mp4.html?id=%s\"function b:resolveUrl(d,i)local j=self:parseUrl(d)local k=string.format(h,j.id)i(k,{start=j.start})end;function b:query(d,i)i(nil,{title=d:match(\"([^/]+)$\")})end;medialib.load(\"media\").registerService(\"mp4\",b)"
medialib.FolderItems["services/soundcloud.lua"] = "local a=medialib.load(\"oop\")local b=a.class(\"SoundcloudService\",\"BASSService\")local c={\"^https?://www.soundcloud.com/([A-Za-z0-9_%-]+/[A-Za-z0-9_%-]+)/?$\",\"^https?://soundcloud.com/([A-Za-z0-9_%-]+/[A-Za-z0-9_%-]+)/?$\"}function b:parseUrl(d)for e,f in pairs(c)do local g=string.match(d,f)if g then return{id=g}end end end;function b:isValidUrl(d)return self:parseUrl(d)~=nil end;function b:resolveUrl(d,h)local i=self:parseUrl(d)http.Fetch(string.format(\"https://api.soundcloud.com/resolve.json?url=http://soundcloud.com/%s&client_id=YOUR_CLIENT_ID\",i.id),function(j)local k=util.JSONToTable(j).id;h(string.format(\"https://api.soundcloud.com/tracks/%s/stream?client_id=YOUR_CLIENT_ID\",k),{})end)end;function b:query(d,h)local i=self:parseUrl(d)local l=string.format(\"http://api.soundcloud.com/resolve.json?url=http://soundcloud.com/%s&client_id=YOUR_CLIENT_ID\",i.id)http.Fetch(l,function(m,n)if n==0 then h(\"http body size = 0\")return end;local o=util.JSONToTable(m)if o.errors then local p=o.errors[1].error_message or\"error\"local q=p;if string.StartWith(p,\"404\")then q=\"Invalid id\"end;h(q)return end;h(nil,{title=o.title,duration=tonumber(o.duration)/1000})end,function(r)h(\"HTTP: \"..r)end)end;medialib.load(\"media\").registerService(\"soundcloud\",b)"
medialib.FolderItems["services/twitch.lua"] = "local a=medialib.load(\"oop\")local b=a.class(\"TwitchService\",\"HTMLService\")local c={\"https?://www.twitch.tv/([A-Za-z0-9_%-]+)\",\"https?://twitch.tv/([A-Za-z0-9_%-]+)\"}function b:parseUrl(d)for e,f in pairs(c)do local g=string.match(d,f)if g then return{id=g}end end end;function b:isValidUrl(d)return self:parseUrl(d)~=nil end;local h=\"http://wyozi.github.io/gmod-medialib/twitch.html?channel=%s\"function b:resolveUrl(d,i)local j=self:parseUrl(d)local k=string.format(h,j.id)i(k,{start=j.start})end;function b:query(d,i)local j=self:parseUrl(d)local l=string.format(\"https://api.twitch.tv/kraken/channels/%s\",j.id)http.Fetch(l,function(m,n)if n==0 then i(\"http body size = 0\")return end;local o={}o.id=j.id;local p=util.JSONToTable(m)if p then if p.error then i(p.message)return else o.title=p.display_name..\": \"..p.status end else o.title=\"ERROR\"end;i(nil,o)end,function(q)i(\"HTTP: \"..q)end)end;medialib.load(\"media\").registerService(\"twitch\",b)"
medialib.FolderItems["services/vimeo.lua"] = "local a=medialib.load(\"oop\")local b=a.class(\"VimeoService\",\"HTMLService\")local c={\"https?://www.vimeo.com/([0-9]+)\",\"https?://vimeo.com/([0-9]+)\",\"https?://www.vimeo.com/channels/staffpicks/([0-9]+)\",\"https?://vimeo.com/channels/staffpicks/([0-9]+)\"}function b:parseUrl(d)for e,f in pairs(c)do local g=string.match(d,f)if g then return{id=g}end end end;function b:isValidUrl(d)return self:parseUrl(d)~=nil end;local h=\"http://wyozi.github.io/gmod-medialib/vimeo.html?id=%s\"function b:resolveUrl(d,i)local j=self:parseUrl(d)local k=string.format(h,j.id)i(k,{start=j.start})end;function b:query(d,i)local j=self:parseUrl(d)local l=string.format(\"http://vimeo.com/api/v2/video/%s.json\",j.id)http.Fetch(l,function(m,n,o,p)if n==0 then i(\"http body size = 0\")return end;if p==404 then i(\"Invalid id\")return end;local q={}q.id=j.id;local r=util.JSONToTable(m)if r then q.title=r[1].title;q.duration=r[1].duration else q.title=\"ERROR\"end;i(nil,q)end,function(s)i(\"HTTP: \"..s)end)end;function b:hasReliablePlaybackEvents(t)return true end;medialib.load(\"media\").registerService(\"vimeo\",b)"
medialib.FolderItems["services/webaudio.lua"] = "local a=medialib.load(\"oop\")local b=a.class(\"WebAudioService\",\"BASSService\")local c={\"^https?://(.*)%.mp3\",\"^https?://(.*)%.ogg\"}function b:parseUrl(d)for e,f in pairs(c)do local g=string.match(d,f)if g then return{id=g}end end end;function b:isValidUrl(d)return self:parseUrl(d)~=nil end;function b:resolveUrl(d,h)h(d,{})end;local i=medialib.load(\"id3parser\")local j=medialib.load(\"mp3duration\")function b:query(d,h)if string.EndsWith(d,\".mp3\")and i or j then http.Fetch(d,function(k)local l,m;if i then local n=i.readtags_data(k)if n and n.title then l=n.title;if n.artist then l=n.artist..\" - \"..l end;if n.length then local o=tonumber(n.length)if o then m=o/1000 end end end end;if j then m=j.estimate_data(k)or m end;h(nil,{title=l or d:match(\"([^/]+)$\"),duration=m})end,function(p)h(\"Metadata fetch error: \"..tostring(p))end)return end;h(nil,{title=d:match(\"([^/]+)$\")})end;medialib.load(\"media\").registerService(\"webaudio\",b)"
medialib.FolderItems["services/webm.lua"] = "local a=medialib.load(\"oop\")local b=a.class(\"WebmService\",\"HTMLService\")local c={\"^https?://.*%.webm\"}function b:parseUrl(d)for e,f in pairs(c)do local g=string.match(d,f)if g then return{id=g}end end end;function b:isValidUrl(d)return self:parseUrl(d)~=nil end;local h=\"http://wyozi.github.io/gmod-medialib/webm.html?id=%s\"function b:resolveUrl(d,i)local j=self:parseUrl(d)local k=string.format(h,j.id)i(k,{start=j.start})end;function b:query(d,i)i(nil,{title=d:match(\"([^/]+)$\")})end;medialib.load(\"media\").registerService(\"webm\",b)"
medialib.FolderItems["services/webradio.lua"] = "local a=medialib.load(\"oop\")local b=a.class(\"WebRadioService\",\"BASSService\")local c={\"^https?://(.*)%.pls\",\"^https?://(.*)%.m3u\"}function b:parseUrl(d)for e,f in pairs(c)do local g=string.match(d,f)if g then return{id=g}end end end;function b:isValidUrl(d)return self:parseUrl(d)~=nil end;function b:resolveUrl(d,h)h(d,{})end;local i=medialib.load(\"shoutcastmeta\")function b:query(d,h)local function j()h(nil,{title=d:match(\"([^/]+)$\")})end;if i then i.fetch(d,function(k,l)if k then j()return end;h(nil,l)end)return end;j()end;medialib.load(\"media\").registerService(\"webradio\",b)"
medialib.FolderItems["services/youtube.lua"] = "local a=medialib.load(\"oop\")local b=a.class(\"YoutubeService\",\"HTMLService\")local c={\"^https?://[A-Za-z0-9%.%-]*%.?youtu%.be/([A-Za-z0-9_%-]+)\",\"^https?://[A-Za-z0-9%.%-]*%.?youtube%.com/watch%?.*v=([A-Za-z0-9_%-]+)\",\"^https?://[A-Za-z0-9%.%-]*%.?youtube%.com/v/([A-Za-z0-9_%-]+)\"}local d={}for e,f in pairs(c)do local function g(h)table.insert(d,f..h..\"t=(%d+)m(%d+)s\")table.insert(d,f..h..\"t=(%d+)s?\")end;g(\"#\")g(\"&\")g(\"?\")table.insert(d,f)end;function b:parseUrl(i)for j,k in pairs(d)do local l,m,n=string.match(i,k)if l then local o=0;if m and n then o=tonumber(m)*60+tonumber(n)else o=tonumber(m)end;return{id=l,start=o}end end end;function b:isValidUrl(i)return self:parseUrl(i)~=nil end;local p=\"http://wyozi.github.io/gmod-medialib/youtube.html?id=%s\"function b:resolveUrl(i,q)local r=self:parseUrl(i)local s=string.format(p,r.id)q(s,{start=r.start})end;local function t(u)local v=u:match(\"(%d+)H\")or 0;local w=u:match(\"(%d+)M\")or 0;local x=u:match(\"(%d+)S\")or 0;return v*60*60+w*60+x end;local y=\"AIzaSyBmQHvMSiOTrmBKJ0FFJ2LmNtc4YHyUJaQ\"function b:query(i,q)local r=self:parseUrl(i)local z=string.format(\"https://www.googleapis.com/youtube/v3/videos?part=snippet%%2CcontentDetails&id=%s&key=%s\",r.id,y)http.Fetch(z,function(A,B)if B==0 then q(\"http body size = 0\")return end;local C={}C.id=r.id;local D=util.JSONToTable(A)if D and D.items then local E=D.items[1]if not E then q(\"No video id found\")return end;C.title=E.snippet.title;C.duration=tonumber(t(E.contentDetails.duration))else q(A)return end;q(nil,C)end,function(F)q(\"HTTP: \"..F)end)end;function b:hasReliablePlaybackEvents(G)return true end;medialib.load(\"media\").registerService(\"youtube\",b)"
-- 'serviceloader'; CodeLen/MinifiedLen 311/249; Dependencies [servicebase,service_html,service_bass,oop,media,id3parser,mp3duration,shoutcastmeta]
medialib.modulePlaceholder("serviceloader")
do
medialib.load("servicebase")medialib.load("service_html")medialib.load("service_bass")for a,b in medialib.folderIterator("services")do if medialib.DEBUG then print("[MediaLib] Registering service "..b.name)end;if SERVER then b:addcs()end;b:load()end
end
-- '__loader'; CodeLen/MinifiedLen 326/78; Dependencies [mediabase,serviceloader,media]
medialib.modulePlaceholder("__loader")
do
medialib.load("mediabase")medialib.load("serviceloader")medialib.load("media")
end
